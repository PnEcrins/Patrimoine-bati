# Generated by Django 5.2.1 on 2025-06-20 07:22

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
import mapentity.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bati",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("valide", models.BooleanField(default=False, null=True)),
                ("appelation", models.CharField(blank=True, max_length=200, null=True)),
                ("indivision", models.BooleanField(default=False, null=True)),
                (
                    "proprietaire",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cadastre", models.CharField(blank=True, max_length=100, null=True)),
                ("lieu_dit", models.CharField(blank=True, max_length=100, null=True)),
                ("altitude", models.FloatField(blank=True, null=True)),
                ("x", models.FloatField(blank=True, null=True)),
                ("y", models.FloatField(blank=True, null=True)),
                (
                    "situation_geo",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("denivelle", models.FloatField(blank=True, null=True)),
                ("pente", models.FloatField(blank=True, null=True)),
                ("capacite", models.FloatField(blank=True, null=True)),
                (
                    "date_insert",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("bat_suppr", models.BooleanField(default=False, null=True)),
                (
                    "patrimonialite",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("ancien_index", models.FloatField(blank=True, null=True)),
                (
                    "commentaire_masque",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "remarque_risque",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(mapentity.models.DuplicateMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Nomenclature",
            fields=[
                (
                    "id_nomenclature",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("label", models.CharField(max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NomenclatureType",
            fields=[
                ("id_type", models.AutoField(primary_key=True, serialize=False)),
                ("label", models.CharField(max_length=255)),
                ("definition", models.CharField(blank=True, max_length=255, null=True)),
                ("code", models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Enquetes",
            fields=[
                ("idenquete", models.AutoField(primary_key=True, serialize=False)),
                (
                    "date_enquete",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "date_redaction",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "id_bat",
                    models.ForeignKey(
                        db_column="id_bat",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batiments_id_bat",
                        to="bati.bati",
                    ),
                ),
                (
                    "personne",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"id_type__code": "PERSONNES"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batiments_personnes_enquetes",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bati",
            name="classe",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "CL_ARCHI"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_classe",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="conservation",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "CONSERVATION"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_conservation",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="exposition",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "EXPO"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_exposition",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="faitage",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "FAITAGE"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_faitage",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="implantation",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "IMPLA"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_codepem",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="masques",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "MASQUE"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_info_masque",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="notepatri",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "NOTE_PAT"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_notepatri",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="protection",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "PROT"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_protection",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="risquenat",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "RISQUE"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_risquenat",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="secteur",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "SECTEUR"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_secteur",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="nomenclature",
            name="id_type",
            field=models.ForeignKey(
                db_column="id_type",
                on_delete=django.db.models.deletion.CASCADE,
                to="bati.nomenclaturetype",
            ),
        ),
    ]
