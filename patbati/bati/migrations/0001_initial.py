# Generated by Django 5.2.1 on 2025-07-29 08:01

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
import mapentity.models
import zoning.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuteurPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(verbose_name=100)),
                ("prenom", models.CharField(verbose_name=100)),
                ("descriptif", models.TextField(verbose_name=100)),
            ],
        ),
        migrations.CreateModel(
            name="Bati",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "valide",
                    models.BooleanField(
                        default=False, null=True, verbose_name="Valid√©"
                    ),
                ),
                ("appelation", models.CharField(blank=True, max_length=200, null=True)),
                ("indivision", models.BooleanField(default=False, null=True)),
                (
                    "proprietaire",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("cadastre", models.CharField(blank=True, max_length=100, null=True)),
                ("lieu_dit", models.CharField(blank=True, max_length=100, null=True)),
                ("altitude", models.FloatField(blank=True, null=True)),
                ("x", models.FloatField(blank=True, null=True)),
                ("y", models.FloatField(blank=True, null=True)),
                (
                    "situation_geo",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("denivelle", models.FloatField(blank=True, null=True)),
                ("pente", models.FloatField(blank=True, null=True)),
                ("capacite", models.FloatField(blank=True, null=True)),
                (
                    "date_insert",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                ("bat_suppr", models.BooleanField(default=False, null=True)),
                (
                    "patrimonialite",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("ancien_index", models.FloatField(blank=True, null=True)),
                (
                    "commentaire_masque",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "remarque_risque",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("remarque_generale", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=(
                zoning.mixins.AreaPropertyMixin,
                mapentity.models.DuplicateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Nomenclature",
            fields=[
                (
                    "id_nomenclature",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("label", models.CharField(max_length=255)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("parentId", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="NomenclatureType",
            fields=[
                ("id_type", models.AutoField(primary_key=True, serialize=False)),
                ("label", models.CharField(max_length=255)),
                ("definition", models.CharField(blank=True, max_length=255, null=True)),
                ("code", models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="DemandeTravaux",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("demande_dep", models.BooleanField(default=False)),
                ("autorisation_p", models.BooleanField(default=False, null=True)),
                ("date_permis", models.DateField(null=True)),
                ("date_demande_permis", models.DateField(null=True)),
                ("num_permis", models.CharField()),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demandes_travaux",
                        to="bati.bati",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MateriauxFinFinitionStructure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "finition",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finition_mat_fin_rel",
                        to="bati.nomenclature",
                        verbose_name="Finition",
                    ),
                ),
                (
                    "materiaux_fin",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MAT_FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiaux_fin_rel",
                        to="bati.nomenclature",
                        verbose_name="Materiaux fin",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MateriauxFinFinitionSecondOeuvre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "finition",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finition_mat_fin_rel_soc",
                        to="bati.nomenclature",
                        verbose_name="Finition",
                    ),
                ),
                (
                    "materiaux_fin",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MAT_FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiaux_fin_rel_sec",
                        to="bati.nomenclature",
                        verbose_name="Materiaux fins",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MateriauxFinFinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "finition",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="finition_materiaux_fin",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "materiaux_fin",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MAT_FIN"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiaux_fin_finition",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MateriauGeMiseEnOeuvre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materiaux_ge",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MAT_GE"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiaux_ge_mise_en_oeuvre",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "mise_en_oeuvre",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MEOEUVRE"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mise_en_oeuvre_materiaux_ge",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Equipement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commentaire",
                    models.TextField(null=True, verbose_name="Commentaire"),
                ),
                (
                    "est_remarquable",
                    models.BooleanField(default=False, verbose_name="Remarquable"),
                ),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipements",
                        to="bati.bati",
                    ),
                ),
                (
                    "conservation",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "CONSERVATION"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipement_conservation",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "EQUIP"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="equipement_type",
                        to="bati.nomenclature",
                        verbose_name="Type d'√©quipement",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enquetes",
            fields=[
                ("idenquete", models.AutoField(primary_key=True, serialize=False)),
                (
                    "date_enquete",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "date_redaction",
                    models.DateTimeField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "bati",
                    models.ForeignKey(
                        db_column="bati",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enquetes",
                        to="bati.bati",
                    ),
                ),
                (
                    "personne",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"id_type__code": "PERSONNES"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="batiments_personnes_enquetes",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ElementPaysager",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commentaire",
                    models.TextField(null=True, verbose_name="Commentaire"),
                ),
                (
                    "est_remarquable",
                    models.BooleanField(default=False, verbose_name="Remarquable"),
                ),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="elements_paysagers",
                        to="bati.bati",
                    ),
                ),
                (
                    "conservation",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "CONSERVATION"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="elem_paysager_conservation",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "ELEM_PAYS"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="elem_paysager_type",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ClasseArchiNature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classe",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"id_type__code": "CL_ARCHI"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classe_archi_nature",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "nature",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"id_type__code": "NATURE_TRAVAUX"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nature_classe_archi",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bati",
            name="classe",
            field=models.ForeignKey(
                limit_choices_to={"id_type__code": "CL_ARCHI"},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_classe",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="conservation",
            field=models.ForeignKey(
                limit_choices_to={"id_type__code": "CONSERVATION"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_conservation",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="exposition",
            field=models.ForeignKey(
                limit_choices_to={"id_type__code": "EXPO"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_exposition",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="faitage",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "FAITAGE"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_faitage",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="implantation",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "IMPLA"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_implantation",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="masques",
            field=models.ManyToManyField(
                limit_choices_to={"id_type__code": "MASQUE"},
                related_name="batiments_info_masque",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="notepatri",
            field=models.ForeignKey(
                limit_choices_to={"id_type__code": "NOTE_PAT"},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="batiments_notepatri",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="risques_nat",
            field=models.ManyToManyField(
                blank=True,
                limit_choices_to={"id_type__code": "RISQUE"},
                related_name="batiments_risquenat",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="bati",
            name="type_bat",
            field=models.ForeignKey(
                blank=True,
                limit_choices_to={"id_type__code": "TYPE_BAT"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="batiments_type",
                to="bati.nomenclature",
            ),
        ),
        migrations.AddField(
            model_name="nomenclature",
            name="id_type",
            field=models.ForeignKey(
                db_column="id_type",
                on_delete=django.db.models.deletion.CASCADE,
                to="bati.nomenclaturetype",
            ),
        ),
        migrations.CreateModel(
            name="Perspective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(null=True)),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="bati.bati"
                    ),
                ),
                (
                    "perspective",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"id_type__code": "PERSP"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="perspective_bati",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bati",
            name="perspectives",
            field=models.ManyToManyField(
                through="bati.Perspective", to="bati.nomenclature"
            ),
        ),
        migrations.CreateModel(
            name="SecondOeuvre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commentaire",
                    models.TextField(null=True, verbose_name="Commentaire"),
                ),
                (
                    "est_remarquable",
                    models.BooleanField(default=False, verbose_name="Remarquable"),
                ),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="second_oeuvre",
                        to="bati.bati",
                    ),
                ),
                (
                    "conservation",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "CONSERVATION"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="second_oeuvre_conservation",
                        to="bati.nomenclature",
                        verbose_name="Etat de conservation",
                    ),
                ),
                (
                    "materiaux_fin",
                    models.ManyToManyField(
                        through="bati.MateriauxFinFinitionSecondOeuvre",
                        through_fields=["second_oeuvre", "materiaux_fin"],
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "SO"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure_second_oeuvre",
                        to="bati.nomenclature",
                        verbose_name="Type de second oeuvre",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="materiauxfinfinitionsecondoeuvre",
            name="second_oeuvre",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="second_oeuvre",
                to="bati.secondoeuvre",
            ),
        ),
        migrations.CreateModel(
            name="Structure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("info_structure", models.TextField(null=True)),
                (
                    "est_remarquable",
                    models.BooleanField(
                        default=False, verbose_name="Structure remarquable"
                    ),
                ),
                (
                    "bati",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure",
                        to="bati.bati",
                    ),
                ),
                (
                    "conservation",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "CONSERVATION"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure_conservation",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "materiaux_fin",
                    models.ManyToManyField(
                        through="bati.MateriauxFinFinitionStructure",
                        through_fields=["structure", "materiaux_fin"],
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "materiaux_principal",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MAT_GE"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure_mat_princip",
                        to="bati.nomenclature",
                        verbose_name="Materiau principal",
                    ),
                ),
                (
                    "mise_en_oeuvre",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "MEOEUVRE"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure_me",
                        to="bati.nomenclature",
                        verbose_name="Mise en oeuvre",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "STRUCT"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="structure_struct",
                        to="bati.nomenclature",
                        verbose_name="Type de structure",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="materiauxfinfinitionstructure",
            name="structure",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="finitions",
                to="bati.structure",
            ),
        ),
        migrations.CreateModel(
            name="Travaux",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        db_comment="Ce champs est non null depuis la v2, remplie avec 1800-01-01 quand l'info √©tait absente"
                    ),
                ),
                ("autorisation", models.BooleanField(null=True)),
                ("subvention_pne", models.IntegerField(blank=True, null=True)),
                (
                    "demande",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travaux",
                        to="bati.demandetravaux",
                    ),
                ),
                (
                    "nature",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "NATURE_TRAVAUX"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nature_travaux",
                        to="bati.nomenclature",
                    ),
                ),
                (
                    "usage",
                    models.ForeignKey(
                        limit_choices_to={"id_type__code": "USAGE_TRAVAUX"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_travaux",
                        to="bati.nomenclature",
                    ),
                ),
            ],
        ),
    ]
