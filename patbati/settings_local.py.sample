# Backend d'auth externe
AUTHENTICATION_BACKENDS += ['authent.backend.DatabaseBackend']

# Nom BDD et table auth externe
AUTHENT_DATABASE = 'authent'
AUTHENT_TABLENAME = 'utilisateurs.ma_table'

# Bases de données
DATABASES = {
    # Base principale : PostGIS pour Django
    "default": {
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv("DB_NAME"),
        "USER": os.getenv("DB_USER"),
        "PASSWORD": os.getenv("DB_PASSWORD"),
        "HOST": os.getenv("DB_HOST", "localhost"),
        "PORT": os.getenv("DB_PORT", "5432"),
        # Schémas utilisés par défaut
        "OPTIONS": {"options": "-c search_path=public,ref_geo"},
    },
    "authent": {
        # Base d'authentification externe
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '',
        'USER': '',
        'PASSWORD': '',
        'HOST': '',
        'PORT': '',
        # Schéma utilisé pour l'authentification
        'OPTIONS': {'options': '-c search_path=public,utilisateurs'}
    }
}

# Groupe par défaut (optionnel)
#AUTHENT_DEFAULT_USER_GROUP_NAME = "test"

# Config zoning
ZONING_CONFIG = {
    "LOCAL_SRID": 2154,
    # Type de zonage sur les fiches détails
    "AREA_TYPE_LIMITED": [],
    # Type de zonage administratif (utilisé pour classer les type de zonages sur les fiches détails)
    "ADMINISTRATIVE_AREAS": ["COM", "SEC"],
    # Type de zones reglementé (utilisé dans les filtres)
    "REGULATORY_AREAS": ["ZC", "RNN", "RNR", "ZPS", "SIC", "SITE_CLASSES", "SITE_INSC", "PPN", "ZNIEFF2", "ZNIEFF1"],
}

# SSO activé ou non (permet de se connecter à un système d'authentication externe type Keycloak)
SSO_LOGIN_ENABLED = False

# Infos SSO
AUTHLIB_OAUTH_CLIENTS = {
    'keycloak': {
        'client_id': "<MY_CLIENT_ID>",
        'client_secret': "<MY_CLIENT_SECRET>",
    }
}
SSO_ENDPOINT = "https://<URL_KEYCLOAK>/realms/<NOM DU REALM>/.well-known/openid-configuration"